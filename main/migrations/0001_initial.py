# Generated by Django 4.1.7 on 2023-05-15 21:37

import autoslug.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='banner_imgs/')),
                ('alt_text', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name_plural': '0: Image Banners',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='brand_imgs/')),
            ],
            options={
                'verbose_name_plural': '2B: Swapt Listing Brands',
            },
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amt', models.FloatField()),
                ('paid_status', models.BooleanField(default=False)),
                ('order_dt', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(choices=[('process', 'In Process'), ('shipped', 'Shipped'), ('delivered', 'Delivered')], default='process', max_length=150)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Swapt Orders',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='cat_imgs/')),
            ],
            options={
                'verbose_name_plural': '2C: Swapt Listing Categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('color_code', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '1B: Inventory Item Colors',
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '1C: Inventory Item Dimensions',
            },
        ),
        migrations.CreateModel(
            name='InventoryListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=('title',), unique=True, verbose_name='slug')),
                ('detail', models.TextField()),
                ('delivery', models.PositiveSmallIntegerField(choices=[(1, 'Local Pickup'), (2, 'Swapt Delivery')], default=1, null=True)),
                ('status', models.BooleanField(default=True)),
                ('category', models.CharField(choices=[('Living Room Furniture', 'Living Room Furniture'), ('Entryway Furniture', 'Entryway Furniture'), ('Kitchen Furniture', 'Kitchen Furniture'), ('Dining Room Furniture', 'Dining Room Furniture'), ('Office Furniture', 'Office Furniture'), ('Bedroom Furniture', 'Bedroom Furniture'), ('Bathroom Furniture', 'Bathroom Furniture'), ('Laundry Furniture', 'Laundry Furniture'), ('Storage Room Furniture', 'Storage Room Furniture'), ('Outdoor Furniture', 'Outdoor Furniture'), ('Other Furniture', 'Other Furniture')], max_length=50, null=True)),
                ('condition', models.CharField(choices=[('New', 'New'), ('Used - Like New', 'Used - Like New'), ('Used - Decent', 'Used - Decent'), ('Used - Fair', 'Used - Fair')], max_length=50, null=True)),
                ('stage', models.PositiveSmallIntegerField(choices=[(1, 'Draft'), (2, 'Published'), (3, 'Unpublished'), (4, 'Reported'), (5, 'Closed')], null=True)),
                ('selling_stage', models.CharField(choices=[('Available', 'Available'), ('Pending', 'Pending'), ('Sold', 'Sold')], default='Available', max_length=50, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('isBundled', models.BooleanField(default=False)),
                ('issue', models.CharField(blank=True, max_length=250, null=True)),
                ('quantity', models.IntegerField(default=1, null=True)),
                ('publishing_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('swaptuser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.swaptuser')),
            ],
            options={
                'verbose_name_plural': '1D. Inventory Items',
            },
        ),
        migrations.CreateModel(
            name='InventoryListingTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': '1A: Inventory Listing Tags',
            },
        ),
        migrations.CreateModel(
            name='SwaptListingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('is_paid', models.BooleanField(default=False)),
                ('is_MoveInReady', models.BooleanField(default=False)),
                ('detail', models.TextField(default='detail')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=('title',), unique=True, verbose_name='slug')),
                ('status', models.BooleanField(default=True)),
                ('condition', models.CharField(choices=[('New', 'New'), ('Used - Like New', 'Used - Like New'), ('Used - Decent', 'Used - Decent'), ('Used - Fair', 'Used - Fair')], max_length=50, null=True)),
                ('location', models.CharField(choices=[('Elon, NC', 'Elon, NC'), ('Burlington, NC', 'Burlington, NC')], max_length=30, null=True)),
                ('delivery', models.PositiveSmallIntegerField(choices=[(1, 'Local Pickup'), (2, 'Swapt Delivery')], null=True)),
                ('stage', models.PositiveSmallIntegerField(choices=[(1, 'Under Review'), (2, 'Approved'), (3, 'Rejected'), (4, 'Reported'), (5, 'Closed')], null=True)),
                ('selling_stage', models.CharField(choices=[('Available', 'Available'), ('Pending', 'Pending'), ('Sold', 'Sold')], max_length=50, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('issue', models.CharField(blank=True, max_length=250, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('is_featured', models.BooleanField(default=False)),
                ('move_out_date', models.DateField(default=datetime.date.today)),
                ('publishing_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.brand')),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.category')),
                ('listings', models.ManyToManyField(blank=True, related_name='inventory_items', to='main.inventorylisting')),
                ('propertymanager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.propmanager')),
                ('swaptuser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.swaptuser')),
            ],
            options={
                'verbose_name_plural': '2D. Swapt Listings',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='SwaptListingTransactionRef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('paid', models.BooleanField(default='False')),
                ('amount', models.IntegerField(default=0)),
                ('description', models.CharField(default=None, max_length=800)),
            ],
        ),
        migrations.CreateModel(
            name='SwaptPropertyManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('companyname', models.CharField(default='company', max_length=40)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('propertyname', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.swaptlistingmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='UserAddressBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('propertyname', models.CharField(max_length=50, null=True)),
                ('address', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User: AddressBook',
            },
        ),
        migrations.CreateModel(
            name='SwaptPaymentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('payment_status', models.CharField(choices=[('P', 'pending'), ('C', 'completed'), ('F', 'failed')], default='P', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.inventorylisting')),
            ],
        ),
        migrations.CreateModel(
            name='SwaptCampusPropertyNamePair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus', models.CharField(choices=[('Elon', 'Elon'), ('UMD', 'UMD'), ('UNCG', 'UNCG')], default='Elon', max_length=30)),
                ('propertyname', models.CharField(choices=[('Oaks', 'Oaks'), ('MillPoint', 'MillPoint'), ('OakHill', 'OakHill')], max_length=30)),
                ('confirmed', models.BooleanField(default=False)),
                ('listings', models.ManyToManyField(to='main.swaptlistingmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Swapt_Prices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('swapt_bundle_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.swaptlistingmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOffers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offers_text', models.TextField()),
                ('offers_amount', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.swaptlistingmodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Offers',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(null=True, upload_to='product_imgs/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.swaptlistingmodel')),
            ],
            options={
                'verbose_name_plural': '2E: Swapt Listing Item Attributes',
            },
        ),
        migrations.CreateModel(
            name='InventoryListingPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.inventorylisting')),
            ],
        ),
        migrations.AddField(
            model_name='inventorylisting',
            name='tags',
            field=models.ManyToManyField(blank=True, to='main.inventorylistingtag'),
        ),
        migrations.CreateModel(
            name='InventoryItemAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(default='Brand', max_length=100)),
                ('price', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(null=True, upload_to='product_imgs/')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.inventorylisting')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.dimension')),
            ],
            options={
                'verbose_name_plural': '1E: Inventory Item Attributes',
            },
        ),
        migrations.CreateModel(
            name='InventoryCampusPropertyNamePair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus', models.CharField(choices=[('Elon', 'Elon'), ('UMD', 'UMD'), ('UNCG', 'UNCG')], default='Elon', max_length=30)),
                ('propertyname', models.CharField(choices=[('Oaks', 'Oaks'), ('MillPoint', 'MillPoint'), ('OakHill', 'OakHill')], max_length=30)),
                ('confirmed', models.BooleanField(default=False)),
                ('listings', models.ManyToManyField(to='main.inventorylisting')),
            ],
        ),
        migrations.CreateModel(
            name='CartOrderItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=150)),
                ('item', models.CharField(max_length=150)),
                ('image', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('price', models.FloatField()),
                ('total', models.FloatField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cartorder')),
            ],
            options={
                'verbose_name_plural': 'Swapt Order Items',
            },
        ),
    ]
